"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Sense = void 0;
const app = require("..");
class Sense {
    constructor(core, maximumDistance = 250) {
        this.core = core;
        this.maximumDistance = maximumDistance;
    }
    async updateAsync(localPlayer, players, mode) {
        const pointers = [];
        this.collectChanges(localPlayer, players, pointers, mode);
        await this.core.process.batch(pointers).writeAsync();
    }
    collectChanges(localPlayer, players, pointers, mode) {
        for (const x of players) {
            if (x.isLocal || [0, 255].includes(x.glowEnable.value))
                continue;
            const dx = (localPlayer.localOrigin.value.x - x.localOrigin.value.x) * 0.0254;
            const dy = (localPlayer.localOrigin.value.y - x.localOrigin.value.y) * 0.0254;
            const r = Math.sqrt(Math.pow(dx, 2) + Math.pow(dy, 2));
            if (r < this.maximumDistance) {
                const color = app.Color.parse(x.createColor(localPlayer, mode), 50);
                const type = new app.EntityGlow(101, 101, 46, 90);
                if (!app.shallowEquals(x.glowColor.value, color) || !app.shallowEquals(x.glowType.value, type) || x.glowEnable.value !== 1 || x.glowThroughWalls.value !== 2) {
                    x.glowColor.value = color;
                    x.glowType.value = type;
                    //x.glowEnable.value = 1;
                    x.glowThroughWalls.value = 2;
                    x.ThirdPerson.value = 1;
                    x.ITEMGLOW.value = 1363184265;
                    pointers.push(x.glowColor, x.glowType, x.glowEnable, x.glowThroughWalls);
                }
            }
        }
    }
}
exports.Sense = Sense;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU2Vuc2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvbGliL2ZlYXR1cmVzL1NlbnNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLDBCQUEwQjtBQUUxQixNQUFhLEtBQUs7SUFDaEIsWUFDbUIsSUFBYyxFQUNkLGtCQUFrQixHQUFHO1FBRHJCLFNBQUksR0FBSixJQUFJLENBQVU7UUFDZCxvQkFBZSxHQUFmLGVBQWUsQ0FBTTtJQUFHLENBQUM7SUFFNUMsS0FBSyxDQUFDLFdBQVcsQ0FBQyxXQUF1QixFQUFFLE9BQTBCLEVBQUUsSUFBYTtRQUNsRixNQUFNLFFBQVEsR0FBdUIsRUFBRSxDQUFDO1FBQ3hDLElBQUksQ0FBQyxjQUFjLENBQUMsV0FBVyxFQUFFLE9BQU8sRUFBRSxRQUFRLEVBQUUsSUFBSSxDQUFDLENBQUM7UUFDMUQsTUFBTSxJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsUUFBUSxDQUFDLENBQUMsVUFBVSxFQUFFLENBQUM7SUFDdkQsQ0FBQztJQUVPLGNBQWMsQ0FBQyxXQUF1QixFQUFFLE9BQTBCLEVBQUUsUUFBNEIsRUFBRSxJQUFhO1FBQ3JILEtBQUssTUFBTSxDQUFDLElBQUksT0FBTyxFQUFFO1lBQ3ZCLElBQUksQ0FBQyxDQUFDLE9BQU8sSUFBSSxDQUFDLENBQUMsRUFBRSxHQUFHLENBQUMsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxLQUFLLENBQUM7Z0JBQUUsU0FBUztZQUNqRSxNQUFNLEVBQUUsR0FBRyxDQUFDLFdBQVcsQ0FBQyxXQUFXLENBQUMsS0FBSyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsV0FBVyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsR0FBRyxNQUFNLENBQUM7WUFDOUUsTUFBTSxFQUFFLEdBQUcsQ0FBQyxXQUFXLENBQUMsV0FBVyxDQUFDLEtBQUssQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLFdBQVcsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLEdBQUcsTUFBTSxDQUFDO1lBQzlFLE1BQU0sQ0FBQyxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUN2RCxJQUFJLENBQUMsR0FBRyxJQUFJLENBQUMsZUFBZSxFQUFFO2dCQUM1QixNQUFNLEtBQUssR0FBRyxHQUFHLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsV0FBVyxDQUFDLFdBQVcsRUFBRSxJQUFJLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQztnQkFDcEUsTUFBTSxJQUFJLEdBQUcsSUFBSSxHQUFHLENBQUMsVUFBVSxDQUFDLEdBQUcsRUFBRSxHQUFHLEVBQUUsRUFBRSxFQUFFLEVBQUUsQ0FBQyxDQUFDO2dCQUNsRCxJQUFJLENBQUMsR0FBRyxDQUFDLGFBQWEsQ0FBQyxDQUFDLENBQUMsU0FBUyxDQUFDLEtBQUssRUFBRSxLQUFLLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxhQUFhLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxLQUFLLEVBQUUsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLFVBQVUsQ0FBQyxLQUFLLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQyxnQkFBZ0IsQ0FBQyxLQUFLLEtBQUssQ0FBQyxFQUFFO29CQUM1SixDQUFDLENBQUMsU0FBUyxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUM7b0JBQzFCLENBQUMsQ0FBQyxRQUFRLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQztvQkFDeEIseUJBQXlCO29CQUN6QixDQUFDLENBQUMsZ0JBQWdCLENBQUMsS0FBSyxHQUFHLENBQUMsQ0FBQztvQkFDN0IsQ0FBQyxDQUFDLFdBQVcsQ0FBQyxLQUFLLEdBQUcsQ0FBQyxDQUFDO29CQUN4QixDQUFDLENBQUMsUUFBUSxDQUFDLEtBQUssR0FBRSxVQUFVLENBQUM7b0JBQzdCLFFBQVEsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLFNBQVMsRUFBRSxDQUFDLENBQUMsUUFBUSxFQUFFLENBQUMsQ0FBQyxVQUFVLEVBQUUsQ0FBQyxDQUFDLGdCQUFnQixDQUFDLENBQUM7aUJBQzFFO2FBQ0Y7U0FDRjtJQUNILENBQUM7Q0FDRjtBQWhDRCxzQkFnQ0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBhcHAgZnJvbSAnLi4nO1xuXG5leHBvcnQgY2xhc3MgU2Vuc2Uge1xuICBjb25zdHJ1Y3RvcihcbiAgICBwcml2YXRlIHJlYWRvbmx5IGNvcmU6IGFwcC5Db3JlLFxuICAgIHByaXZhdGUgcmVhZG9ubHkgbWF4aW11bURpc3RhbmNlID0gMjUwKSB7fVxuXG4gIGFzeW5jIHVwZGF0ZUFzeW5jKGxvY2FsUGxheWVyOiBhcHAuUGxheWVyLCBwbGF5ZXJzOiBBcnJheTxhcHAuUGxheWVyPiwgbW9kZT86IHN0cmluZykge1xuICAgIGNvbnN0IHBvaW50ZXJzOiBBcnJheTxhcHAuUG9pbnRlcj4gPSBbXTtcbiAgICB0aGlzLmNvbGxlY3RDaGFuZ2VzKGxvY2FsUGxheWVyLCBwbGF5ZXJzLCBwb2ludGVycywgbW9kZSk7XG4gICAgYXdhaXQgdGhpcy5jb3JlLnByb2Nlc3MuYmF0Y2gocG9pbnRlcnMpLndyaXRlQXN5bmMoKTsgIFxuICB9XG5cbiAgcHJpdmF0ZSBjb2xsZWN0Q2hhbmdlcyhsb2NhbFBsYXllcjogYXBwLlBsYXllciwgcGxheWVyczogQXJyYXk8YXBwLlBsYXllcj4sIHBvaW50ZXJzOiBBcnJheTxhcHAuUG9pbnRlcj4sIG1vZGU/OiBzdHJpbmcpIHtcbiAgICBmb3IgKGNvbnN0IHggb2YgcGxheWVycykge1xuICAgICAgaWYgKHguaXNMb2NhbCB8fCBbMCwgMjU1XS5pbmNsdWRlcyh4Lmdsb3dFbmFibGUudmFsdWUpKSBjb250aW51ZTtcbiAgICAgIGNvbnN0IGR4ID0gKGxvY2FsUGxheWVyLmxvY2FsT3JpZ2luLnZhbHVlLnggLSB4LmxvY2FsT3JpZ2luLnZhbHVlLngpICogMC4wMjU0O1xuICAgICAgY29uc3QgZHkgPSAobG9jYWxQbGF5ZXIubG9jYWxPcmlnaW4udmFsdWUueSAtIHgubG9jYWxPcmlnaW4udmFsdWUueSkgKiAwLjAyNTQ7XG4gICAgICBjb25zdCByID0gTWF0aC5zcXJ0KE1hdGgucG93KGR4LCAyKSArIE1hdGgucG93KGR5LCAyKSk7XG4gICAgICBpZiAociA8IHRoaXMubWF4aW11bURpc3RhbmNlKSB7XG4gICAgICAgIGNvbnN0IGNvbG9yID0gYXBwLkNvbG9yLnBhcnNlKHguY3JlYXRlQ29sb3IobG9jYWxQbGF5ZXIsIG1vZGUpLCA1MCk7XG4gICAgICAgIGNvbnN0IHR5cGUgPSBuZXcgYXBwLkVudGl0eUdsb3coMTAxLCAxMDEsIDQ2LCA5MCk7XG4gICAgICAgIGlmICghYXBwLnNoYWxsb3dFcXVhbHMoeC5nbG93Q29sb3IudmFsdWUsIGNvbG9yKSB8fCAhYXBwLnNoYWxsb3dFcXVhbHMoeC5nbG93VHlwZS52YWx1ZSwgdHlwZSkgfHwgeC5nbG93RW5hYmxlLnZhbHVlICE9PSAxIHx8IHguZ2xvd1Rocm91Z2hXYWxscy52YWx1ZSAhPT0gMikge1xuICAgICAgICAgIHguZ2xvd0NvbG9yLnZhbHVlID0gY29sb3I7XG4gICAgICAgICAgeC5nbG93VHlwZS52YWx1ZSA9IHR5cGU7XG4gICAgICAgICAgLy94Lmdsb3dFbmFibGUudmFsdWUgPSAxO1xuICAgICAgICAgIHguZ2xvd1Rocm91Z2hXYWxscy52YWx1ZSA9IDI7IFxuICAgICAgICAgIHguVGhpcmRQZXJzb24udmFsdWUgPSAxO1xuICAgICAgICAgIHguSVRFTUdMT1cudmFsdWU9IDEzNjMxODQyNjU7XG4gICAgICAgICAgcG9pbnRlcnMucHVzaCh4Lmdsb3dDb2xvciwgeC5nbG93VHlwZSwgeC5nbG93RW5hYmxlLCB4Lmdsb3dUaHJvdWdoV2FsbHMpOyAgICAgICAgICAgICBcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxufVxuIl19